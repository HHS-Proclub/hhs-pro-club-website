{
    "PRA15": {
        "title": "A Matter of Life and Death",
        "type": "Advanced",
        "state": "up",
        "blurb": "Find the length of the shortest path through a maze, given a limited number of passes through walls.",
        "description": "You were supposed to have a test today in your CS class, but your CS teacher was out sick and your substitute Mr. Monroe seems a little weird. As he hands out the tests, you read the first problem: \r\n<br\/> <br\/>\r\n<ol><li> You are being chased through a maze by a group of hungry velociraptors! As you survey your apparently hopeless condition, you notice that the walls of the maze are low enough to climb over, but that climbing is substantially slower than fleeing on foot. If you spend too much time climbing, the velociraptors will surely catch you. Your only hope of survival is finding the shortest path through to the maze exit, where your velociraptor-proofed fortress awaits. Remember, raptors run at 10 m\/s and they do not know fear.</li></ol><br/>The maze will consist of grid locations marked as either empty (.) or containing a wall (#). You may travel either up, down, left or right, but not diagonally. For each maze, you may travel through a specified maximum number of walls from the start square (S) to the finish square (E), though you need not travel through exactly that number. Your want to find the shortest path through the maze, where path length is calculated as follows: empty squares incur a distance penalty of 1 and walls incur a distance penalty of 3. The start square is not counted (consider it to be location 0), but the end square is. So a path that looks like S#..E will have a path length of 6.    ",
        "inputForm": "Line 1: three space-separated integers r c w, indicating the number of rows, the number of columns, and the maximum number of walls allowed, respectively Lines 2  \u2264  i  \u2264  r + 1: a string of c characters that denotes row i - 1",
        "sampleInput": "5 5 2<br\/>S....<br\/>##.##<br\/>..#.E<br\/>.####<br\/>.....<br\/>",
        "outputForm": "Line 1: an integer p, either the minimum path distance from start to finish, or -1 if no valid path exists",
        "sampleOutput": "8<br\/>"
    },
    "PRB15": {
        "title": "Alien Username",
        "type": "Beginner",
        "state": "up",
        "blurb": "In a galaxy far far away, a planet different from ours, computer usernames follow a different format.",
        "description": "In a galaxy far far away, a planet different from ours, computer usernames follow a different format.<br\/>\r\n<ul>\r\n<li>It has to begin with either an underscore '_' (ascii value 95) or a dot '.' (ascii value 46)\r\n<li>It has to be immediately followed by one or more occurrences of digits numbered 0-9<li>It can then have letters, both uppercase or lowercase, 0 or more in number<li>It can then end with an optional '_' (ascii value 95)</li></ul><br\/>Your task is to validate whether a username is valid or not",
        "inputForm": "First line contains N, N usernames follow each in a newline.",
        "sampleInput": "3<br\/>_0898989811abced_<br\/>_abce<br\/>_09090909abcD0",
        "outputForm": "For every username, print \"VALID\" or \"INVALID\" based on the descsribed rules.",
        "sampleOutput": "VALID<br\/>INVALID<br\/>INVALID<br\/>"
    },
    "HPIA": {
        "title": "Divisors with Dracula",
        "type": "Beginner",
        "state": "hpi2015review",
        "blurb": "Help Dracula find the largest and smallest divisors of a positive integer N.",
        "description": "Help Dracula find the largest and smallest divisors of a positive integer N. If N is prime, print \"-1\" (without quotes) in both output fields.\r\n\r\n1 < N < 1,000,000,000\r\nThe largest and smallest divisors may be the same, but neither may equal the number or 1.",
        "inputForm": "Line 1: N",
        "sampleInput": "100",
        "outputForm": "Line 1: Largest divisor of N<br\/>Line 2: Smallest divisor of N",
        "sampleOutput": "50<br\/>2"
    },
    "HPIB": {
        "title": "Cyclic Strings Adv",
        "type": "Beginner",
        "state": "hpi2015review",
        "blurb": "Dracula wants to make a necklace for his true love. ",
        "description": "Dracula wants to make a necklace for his true love. However, he?s been messing around with his beads and has ended up gluing all of them together in chains. Dracula knows that he can only make the necklace look good if it is cyclic - that is, the necklace must consist of beads such that the last bead in one chain must equal the first bead in the next chain. For example, aaa, bbb would not make a good necklace, but aab, baa would (you can chain the strings together in such a way that b -> b and a -> a). Given N strings of beads, please help Dracula find out if he can make a good necklace. Dracula must use all of the strings of beads in his final necklace.<br\/>1 <= N <= 500 Each string of beads will have a length L such that 2 < L < 11",
        "inputForm": "Line 1: The number N Lines 2..1+N: The N strings of beads (all letters are lowercase) ",
        "sampleInput": "3<br\/>we<br\/>love<br\/>programming",
        "outputForm": "Line 1: YES or NO regarding whether Dracula can make a good necklace. ",
        "sampleOutput": "NO"
    },
    "HPIC": {
        "title": "Itty Bitty Numbers Adv",
        "type": "Beginner",
        "state": "hpi2015review",
        "blurb": "Dracula has been counting the number of bats in his collection and has been notified by a nearby company that they will provide him with free bat food if and only if the numerical representation of the number of bats he owns is equal to M when its Kth bit is turned off.\r\n\r\n 1 < M < 1,000 1 < K < 5 1 < N < 1,000,000 ",
        "description": "Please help Dracula find the number of possible quantities of bats (in the range [0, N]) he may have in order to obtain free food. ",
        "inputForm": " Line 1: Three space-separated integers, M, K, and N ",
        "sampleInput": "676 2 1000",
        "outputForm": " Line 1: The number of possible quantities of bats such that Dracula may obtain free food. ",
        "sampleOutput": "2"
    },
    "HPID": {
        "title": "Negative Bases Adv",
        "type": "Beginner",
        "state": "hpi2015review",
        "blurb": "Dracula has once again been tasked with finding the number of bats in his cave. However, as he is lazy, and the number of bats he has may be quite large, he has decided to outsource this task to a nearby company.",
        "description": " Dracula has once again been tasked with finding the number of bats in his cave. However, as he is lazy, and the number of bats he has may be quite large, he has decided to outsource this task to a nearby company. The only issue with this optimization is that the company will return the number of bats M in base N (where N is negative), and Dracula can only make sense of positive bases. Please help Dracula calculate the number of bats he has in base |N|. We will define a negative base the same way we define a positive one. For example, notice that the ?negadecimal? number 1234 can be represented as -Thousands Hundreds -Tens Units 1 2 3 4 (-1000) + (200) + (-30) + 4 = -826 in base 10. ",
        "inputForm": " Line 1: The number of bats M in base N ",
        "sampleInput": "1302201 -4",
        "outputForm": " Line 1: The number of bats in base |N| ",
        "sampleOutput": "32201"
    },
    "HPIE": {
        "title": "Too Many Stamps",
        "type": "Advanced",
        "state": "hpi2015review",
        "blurb": "Dracula needs to mail a (rather large) envelope that costs M cents in postage.",
        "description": "Dracula needs to mail a (rather large) envelope that costs M cents in postage. However, because of his OCD, he needs to know in exactly how many ways he is able to pay for this postage using his unlimited stock of stamps. There are N kinds of stamps available, and each one has a value of C_i cents. On the envelope, he must stick the stamps in a line, but he can stick them in any order he wants. Given that the order he sticks the stamps on the envelope does matter, and that Dracula wants to use exactly M cents in postage for the envelope, please help him figure out in how many ways he is able to choose the stamps and arrange them on the envelope. NOTE: As the number of ways may be quite large, please output your answer modulo 1,000,000,007.",
        "inputForm": "Line 1: Two integers N and M. <br> Lines 2...N+1: Line i+1 contains C_i, the value of the ith stamp.",
        "sampleInput": "3 5<br> 1<br> 2<br> 5",
        "outputForm": "Line 1: The number of ways Dracula is able to pay postage for the envelope modulo 1,000,000,007.",
        "sampleOutput": "9"
    },
    "HPIF": {
        "title": "Magic Machine",
        "type": "Advanced",
        "state": "hpi2015review",
        "blurb": "Dracula has a magic exponentiating machine.",
        "description": "Dracula has a magic exponentiating machine. When he puts two positive integers A and B into the machine, the machine will tell him the remainder R when A^B is divided by 1,000,000,007. One day, when Dracula put two positive integers A and B into his magic machine, he forgot what value he put in for A. Given the values of B and R, help Dracula figure out the smallest possible value of A that could produce the correct results. There is guaranteed to be an A that works that is less than or equal to 100,000. (1 <= B <= 100,000 and 0 <= R < 1,000,000,007).",
        "inputForm": "Line 1: Two integers B and R",
        "sampleInput": "5 16807",
        "outputForm": "Line 1: The integer A",
        "sampleOutput": "7"
    },
    "HPIG": {
        "title": "Disappearing Act",
        "type": "Advanced",
        "state": "hpi2015review",
        "blurb": "Dracula is practicing an ancient form of vampire sorcery and has managed to summon N rocks lying in a circle.",
        "description": "Dracula is practicing an ancient form of vampire sorcery and has managed to summon N rocks lying in a circle. Each of these rocks has an integer weight <= 10^9. Dracula wants to pick up (one at a time) the rocks that weigh the most, but unfortunately, as soon as he picks up a rock, the two closest remaining rocks on either side disappear. Please help Dracula compute the largest total weight of rocks that he can pick up.",
        "inputForm": "Line 1: The integer N. <br> Lines 2...N+1: Line i+1 contains the weight of the ith rock in the circle, in order.",
        "sampleInput": "6<br> 1 2 3 4 5 6",
        "outputForm": "Line 1: A single integer denoting the largest possible total weight of rocks that can be obtained",
        "sampleOutput": "10"
    },
    "HPIH": {
        "title": "Underground Lair Adv",
        "type": "Advanced",
        "state": "hpi2015review",
        "blurb": "Dracula wants to find the longest path in his underground lair. ",
        "description": "Dracula wants to find the longest path in his underground lair. His lair is made up of N rooms connected by M bi-directional passageways. Each passageway connects two different rooms together and has a given length L_i. It is known that there do not exist any cycles in his lair, and all of the rooms in the lair are not necessarily connected. Help Dracula find the length of the longest path in his lair that does not visit any room more than once.",
        "inputForm": "Line 1: Two integers N and M.<br>Lines 2...M+1: Line i+1 contains A_i, B_i, and L_i, denoting that a passageway connecting A_i and B_i exists with length L_i.",
        "sampleInput": "5 4<br>1 2 4<br>1 3 3<br>5 3 5<br>4 1 7",
        "outputForm": "Line 1: The length of the longest path",
        "sampleOutput": "15"
    },
    "HPII": {
        "title": "Repair the Roof",
        "type": "Advanced",
        "state": "hpi2015review",
        "blurb": "Dracula needs your help to repair a shed with a leaky roof!",
        "description": "Dracula needs your help to repair a shed with a leaky roof! The roof has N holes in it, but luckily all of these holes are located at integer locations along the one-dimensional rooftop of length M, with one end of the roof at 1 and the other end of the roof at M. Dracula is planning to use long wooden slabs to cover up these holes, but he is on a tight budget and wants to spend as little money as possible purchasing these slabs. Dracula can buy slabs of length 1...M, each with its own price C_i. A slab of length M covers M integer coordinates on the rooftop number line. Though slabs may overlap with each other after being placed, Dracula cannot cut up slabs into smaller slabs and use those separately. Note that smaller slabs are not necessarily cheaper than larger slabs.",
        "inputForm": "1 <= N <= 5,000<br>1 <= M <= 100,000<br>1 <= C_i <= 1,000,000",
        "sampleInput": "4 8<br>1<br>2<br>8<br>4<br>2<br>3<br>4<br>4<br>8<br>9<br>15<br>16",
        "outputForm": "Line 1: A single integer that is the minimum amount of money Dracula must spend on slabs to cover all of the holes.",
        "sampleOutput": "6"
    },
    "HPIJ": {
        "title": "Intersecting Flight Paths",
        "type": "Advanced",
        "state": "down",
        "blurb": "Dracula has recently been very fascinated with the flight paths of his N bats.",
        "description": "Dracula has recently been very fascinated with the flight paths of his N bats. Each bat flies in a straight line from point (A_x, A_y) to point (B_x, B_y), where A and B are lattice points in the xy coordinate plane. Dracula wants to know how many of these flight paths intersect each other, since he doesn't want his bats to hit each other. Please output the number of intersections between these N flight paths.\r\n2 <= N <= 10,000 \r\n-1,000,000 <= A_x, A_y, B_x, B_y <= 1,000,000 \r\nThe endpoints are considered as part of the path",
        "inputForm": "Line 1: The integer N.  <br> Lines 2...N+1: Line i contains A_x, A_y, B_x, and B_y of the i+1st bat's flight path, separated by spaces",
        "sampleInput": "Line 1: The number of intersections of the flight paths.",
        "outputForm": "2<br>1 1 4 4<br>1 4 4 1",
        "sampleOutput": "1"
    },
    "HPIK": {
        "title": "Cross Country",
        "type": "Beginner",
        "state": "hpi2015review",
        "blurb": "Dracula wants to travel across the country, which contains N cities conveniently numbered 1 through N.",
        "description": "Dracula wants to travel across the country, which contains N cities conveniently numbered 1 through N. Dracula has a map that gives the travel times by walking of the bidirectional paths between M pairs of cities, and because he does not want to get lost, Dracula can only traverse these paths. To speed up the process, however, Dracula can choose at most one of these paths to fly on, essentially halving the travel time for that path (integer division). Help Dracula compute the shortest time that it will take for him to travel from city 1 to city N along these M paths, given that he is able to fly on at most one path.",
        "inputForm": "Line 1: The integers N and M.<br\/>Lines 2...M+1: Integers A, B, and T, separated by spaces, where T denotes the travel time of the path between cities A and B",
        "sampleInput": "4 5<br\/>1 2 2<br\/>1 3 5<br\/>2 3 2<br\/>2 4 8<br\/>3 4 1<br\/>",
        "outputForm": "Line 1: The shortest time to travel from city 1 to city N.",
        "sampleOutput": "3<br\/>"
    },
    "HPIL": {
        "title": "Bat Racing",
        "type": "Advanced",
        "state": "hpi2015review",
        "blurb": "Dracula's bats are racing each other! Dracula's N bats are lined up at the starting line of a long straight aerial track and numbered 1 through N. ",
        "description": "Dracula's bats are racing each other! Dracula's N bats are lined up at the starting line of a long straight aerial track and numbered 1 through N. However, the bats have a very strange flight pattern. Every second, only a contiguous section of bats moves forwards, and each of the bats in this section moves forwards the same amount. For example, (4, 7) -> 5 would denote that each of the bats numbered 4 through 7 would move forwards 5 units. Unfortunately, Dracula missed the race and wants to know the difference between the locations of the farthest and closest bats in a particular section at certain times throughout the race. There are thus two types of operations: the first type of operation is of the form '0 A B C', which denotes that the bats numbered A through B, inclusive, moved forwards C units. The second type of operation is of the form '1 D E', which denotes that Dracula wishes to know the difference between the locations of the farthest and closest bats of the bats numbered D through E, inclusive. Please help Dracula process these M operations.",
        "inputForm": "Line 1: The integers N and M. <br\/>Lines 2...M+1: The M operations in the order that they need to be processed, with one operation on each line.",
        "sampleInput": "5 6<br\/>0 2 3 3<br\/>1 3 5<br\/>0 4 5 7<br\/>1 3 5<br\/>1 2 3<br\/>1 1 5<br\/>",
        "outputForm": "Lines 1...: For each operation of the second type, output the difference between the locations of the farthest and closest bats in the interval.",
        "sampleOutput": "3<br\/>4<br\/>0<br\/>7<br\/>"
    },
    "PRA14": {
        "title": "The Sphinx",
        "type": "Advanced",
        "state": "up",
        "blurb": "For the past 200 years, the Sphinx has asked the same riddle, and after\r\nhaving devoured the thousands of passersby who failed to answer her\r\nquestion, she is incredibly bored...",
        "description": "For the past 200 years, the Sphinx has asked the same riddle, and after\r\nhaving devoured the thousands of passersby who failed to answer her\r\nquestion, she is incredibly bored. To relieve her monotony, the Sphinx\r\ndecides to try asking something a bit easier\u2014a series of Boolean\r\nexpressions. Since each expression has only one solution\u2014true or\r\nfalse\u2014she figures that passersby will have a fairly good chance of\r\nguessing the solutions, even if they do not actually know them.<br\/><br\/>\r\nThe next day, Oedipus passes by the Sphinx on the road to Thebes.\r\nBeing of peculiar intellect, he manages to answer the Sphinx\u2019s initial\r\nBoolean expressions instantly. Suddenly feeling a resurgence of bloodthirst\r\nand fearing the loss of her once-impeccable reputation, the Sphinx\r\ndecides to stump Oedipus by using all four Boolean operators, along\r\nwith parentheses and order of operations. Help save Oedipus from",
        "inputForm": "The first line of the input is an integer n that represents the number of data collections that follow where each data collection lies on a single line. Each line contains a Boolean expression of unspecified length. The uppercase characters T and F will be used in the Boolean expression to represent the terms true and false, respectively. The order of operations is as follows:<br\/><br\/>() Evaluate the expression in parentheses first. Parentheses may be nested; evaluate from the most inner set of parentheses first.<br\/>! Evaluate the term immediately following the NOT operator according to the rules !T=F and !F=T<br\/>& Evaluate the terms immediately preceding and following the AND operator according to the rules T&T=T, T&F=F, F&T=F, and F&F=F<br\/>^ Evaluate the terms immediately preceding and following the XOR operator according to the rules T^T=F, T^F=T, F^T=T, and F^F=F<br\/>| Evaluate the terms immediately preceding and following the OR operator according to the rules T|T=T, T|F=T, F|T=T, and F|F=F<br\/><br\/>No characters beside TF()!&^| will appear in the lines of input.",
        "sampleInput": "3<br\/>F&T<br\/>!F<br\/>!T^F",
        "outputForm": "Your program should produce n lines of output (one for each data collection). Each line should contain one uppercase character, either T or F, indicating the result of evaluating the corresponding Boolean expression.<br\/><br\/>The output is to be formatted exactly like that for the sample output given below.",
        "sampleOutput": "F<br\/>T<br\/>F<br\/>"
    },
    "PRB14": {
        "title": "The Dead Center of Battle",
        "type": "Beginner",
        "state": "up",
        "blurb": "Under siege by the Greek army, the Trojans are desperately trying to\r\ndefend their city from invasion. Do you choose to help them?",
        "description": "Under siege by the Greek army, the Trojans are desperately trying to\r\ndefend their city from invasion. After each battle (which lasts many\r\nhours), the two sides count their dead. The Trojans use these numbers\r\nto determine how many new warriors to recruit for the next day's battle.\r\nHowever, because there are so many dead, the reports from different\r\nsources are inconsistent. Lacking formal mathematics education, the\r\nTrojan military leader is unable to find the average. Instead, he takes the\r\nthree numbers given to him by his three generals and finds the\r\nmedian\u2014that is, the number in between the other two.\r\n<br\/><br\/>\r\nAssumptions<br\/>\r\nThe value for n will not exceed 1000.\r\n<br\/>The values for a b c each will be between 0 and 999999999, inclusive.\r\n<br\/>The values for a b and c are not exclusive; a b and c may contain\r\nduplicate values.\r\n<br\/>All input will be valid.<br\/>",
        "inputForm": "The first line of the input is an integer n that represents the number of data collections that follow where each data collection lies on a single line of input. Each line contains three integers a b c, each separated by a single space.",
        "sampleInput": "3<br\/>6 6 7<br\/>1582 1234 1337<br\/>6153 6214 10252<br\/>",
        "outputForm": "Your program should produce n lines of output (one for each data collection). Each line should contain a single integer d, corresponding to the median of a, b, and c. Note that the value of d will always be one of either a, b or c. <br\/><br\/>The output is to be formatted exactly like that for the sample output given below.",
        "sampleOutput": "6<br\/>1337<br\/>6214<br\/>"
    },
    "PRB13": {
        "title": "College Credits, Here I Come",
        "type": "Beginner",
        "state": "up",
        "blurb": "You just graduated from college and got that degree in Computer Science and you are ready to begin your journey out in the world.",
        "description": "You just graduated from college and got that degree in Computer Science and you are ready to begin your journey out in the world. Your first goal is of course, to get a job and make some money. Luckily, you find a job at a grammar company. Your job is to determine whether or not a  word in the dictionary is a palindrome. Palindromes are words that spell the same word even when the order of the characters is reversed. Since you are a smart programmer, you can test whether or not a word is a palindrome with a program. Who knew making money would be this easy!",
        "inputForm": "Line 1: A string of text ( between 1 and 10,000 characters long), representing a word that might be a palindrome",
        "sampleInput": "racecar",
        "outputForm": "Line 1: A boolean (true or false) stating whether or not the word is a palindrome.",
        "sampleOutput": "true"
    },
    "HPIB1": {
        "title": "Time Flies When You Imagine Dragons",
        "type": "Beginner",
        "state": "hpi2015practice",
        "blurb": "Add hours and minutes to a given time stamp.",
        "description": "While working on your English final project with your collaborators, a GIANT dragon knocked down your door and threatened to blow you to smithereens with his huge fireball unless all of the watches and clocks in your room were given to him at once. And since he is a GIANT dragon with a huge fireball, you and your friends succumb to the dragon and, as he demands, you give him all of your time instruments. But shortly before that, you sneak a peek at your watch and memorize the current time, and being as smart as you are, you start counting minutes, as precisely as the atomic clock itself. Now when someone asks you what time it is, all you need to do is add the time you memorized to the minutes you\u2019ve been counting!<br\/><br\/>Assumptions:\r\n<br\/>&#09;All timestamps will correspond to valid times. <br\/>&#09;The time since will never exceed 100 hours. <br\/>&#09;No time stamps\u2019 minute values should have leading zeroes.",
        "inputForm": "Line 1: A time stamp: the hour, minute, and AM\/PM, separated by spaces <br\/>Line 2: The time since: the hours and minutes (separated by a space)",
        "sampleInput": "2 49 PM<br\/>26 6<br\/>",
        "outputForm": "Line 1: A new time stamp: the hour, minute, and AM\/PM, separated by spaces",
        "sampleOutput": "4 55 PM"
    },
    "HPIB2": {
        "title": "Extreme Test Grading",
        "type": "Beginner",
        "state": "hpi2015practice",
        "blurb": "Assign a grade to a percentage.",
        "description": "You\u2019re working as a high-profile teaching assistant under one of the greatest professors in the world.  You can\u2019t wait to help the students tackle the unsolved problems of life and nature -- but suddenly, your professor hands you a stack of papers with numbers on them.  He wants you to pencil in a grade for each number and enter it into the school\u2019s online database.  It\u2019s not exactly the most exciting of jobs, but perhaps next time your luck will turn out better.",
        "inputForm": "Line 1: An integer between 0 and 100, inclusive. ",
        "sampleInput": "67",
        "outputForm": " Line 1: A grade (A, B, C, D, or F) potentially followed by a modifier (+ or -). <br\/>\u2022 If the score is 90 or above, it\u2019s an A.  If it\u2019s 80-89, it\u2019s a B; 70-79 is a C; 60-69 is a D and 0-59 is an F. <br\/>\u2022 Modifiers will only be applied if the grade is above an F. <br\/>\u2022 If the ones digit of the grade is 0-3, the modifier is \"-\" <br\/>\u2022 If the ones digit is 7-9, the modifier is \"+\"  <br\/><br\/>Exception:<br\/> A perfect score of 100, which is an A+",
        "sampleOutput": "D+"
    },
    "HPIB3": {
        "title": "Star Catching",
        "type": "Beginner",
        "state": "hpi2015practice",
        "blurb": "Find the number of * characters in a string.",
        "description": "The tricky Bowser has stolen all the stars out of the sky, and it\u2019s up to you to use your trusty programming skills and get them back!  Luckily, you have an idea as to where the lost stars are.  A mysterious man whispered a string into your ear while you were eating breakfast, and you think that if you can find the number of stars in the string, then you might receive another clue from yet another mysterious person.  No harm in trying, right? ",
        "inputForm": "Line 1: A string",
        "sampleInput": "Find the number of * characters in a string",
        "outputForm": "Line 1: An integer representing how many * characters appear in the given string",
        "sampleOutput": "*"
    },
    "HPIA1": {
        "title": "Is that Light still On? ",
        "type": "Advanced",
        "state": "hpi2015practice",
        "blurb": "Support certain operations involving switching a row of lights on and off.",
        "description": " You\u2019ve just landed the job of manning the light show for none other than the pop superstar, Ally California!  The light show that you\u2019ll be operating is composed completely of a row of m lights, each of which can either be switched on or off.  Luckily, you will also be given a sheet that instructs you how to operate the lights.  The sheet will always tell you either to turn a single light on\/off or to turn every light on\/off.  Each light starts switched off, of course.<br\/><br\/>A few days later, as you are practicing your light show, your boss comes in to watch.  At various points throughout the show, he says, he wants to check whether certain lights are on.  You must answer his questions or else risk losing the job of your dreams!",
        "inputForm": "Line 1: Two integers m and n, the number of lights and the number of commands to process <br\/>Lines 2 \u2264 i \u2264 n + 1: Two integers, separated by a space. The first integer will always be one of the following: <br\/><br\/>0, representing the instruction to turn a light off, <br\/>1, representing the instruction to turn a light on, or <br\/>2, representing a query for the status of a light.  <br\/><br\/>The second integer will either be 0 (which represents all lights) or between 1 and m (which represents the corresponding single light). ",
        "sampleInput": "5 4<br\/>1 0<br\/>0 1<br\/>2 1<br\/>2 4<br\/>",
        "outputForm": "Line 1: Output (all on the same line) an integer for each query: 1 if the light is on and 0 if the light is off.",
        "sampleOutput": "01<br\/>"
    },
    "HPIA2": {
        "title": "Go Home, Cow",
        "type": "Advanced",
        "state": "hpi2015practice",
        "blurb": "Find the number of integer lattice points within a circle.",
        "description": "Today you\u2019ve decided to try your hand at being a shepherd. You\u2019ve set up a\r\npasture on the 2D coordinate plane; the pasture is a circular area centered at (m, n) and with\r\nradius r. You want to put as many sheep in your pasture as possible. However, you want your\r\nsheep to be nice and happy, and you know that the nicest grass grows on lattice points (points\r\nwith integer coordinates). Therefore, each sheep must be placed on a lattice point. Of course,\r\ntwo sheep cannot be placed on the same point. (Note that you are allowed to place sheep on\r\nthe border of your pasture.)\r\n\r\n<br\/><br\/> \r\nWhat is the maximum number of sheep you can place in your pasture?",
        "inputForm": "Line 1: Two decimals, m and n, followed by one integer r.",
        "sampleInput": "0.4 0.7 4<br\/>",
        "outputForm": "Line 1: One integer, the maximum number of sheep you may place.",
        "sampleOutput": "51<br\/>"
    },
    "HPIA3": {
        "title": "Sorting Potions",
        "type": "Advanced",
        "state": "hpi2015practice",
        "blurb": "Sort a list of strings from shortest to longest. ",
        "description": "Gah! You have just been assigned detention with Professor Snape - for walking disrespectfully. Tonight your task is to sort the numerous ingredients in his potions cupboard. Unfortunately, Professor Snape is a particular man; instead of sorting the ingredients in alphabetic order, you must sort the string on each ingredient\u2019s label from shortest to longest. If two strings are the same length, then they must be sorted in alphabetical order. To prove to Snape that you have properly sorted everything, you must also show him the ingredient labels found at particular indices. Here\u2019s to hoping that you\u2019ll finish before curfew! ",
        "inputForm": "Line 1: an n integer m representing the number of strings in the list. Line 2 \u2264 i \u2264 m contains a single string si representing the label of ingredient i. The next line contains a single integer n representing the number of indices to print out. In the next n lines, the j-th line (1 \u2264 j \u2264 n) contains a single integer nj indicating an index to print out. ",
        "sampleInput": "2<br\/>AAA<br\/>AA<br\/>1<br\/>1<br\/>",
        "outputForm": "Print exactly n lines, with the j-th line (1 \u2264 j \u2264 n) containing the string at index nj after sorting. ",
        "sampleOutput": "AAA"
    },
    "HPIA4": {
        "title": "Assembly Required",
        "type": "Advanced",
        "state": "hpi2015practice",
        "blurb": "Find the screw of a particular length given only comparisons between the screws.",
        "description": " You just bought a new chair from IKEA and you\u2019re very excited to assemble it. However, the instructions refer to screws of several different lengths and you are dismayed to find that you do not have a ruler in your house.<br\/><br\/>\r\nNot to be discouraged, you hit on a brilliant plan to figure out which screw has which length. You put each screw into a pile with all the screws of the same length and you label these sets with numbers starting with 1. Then, you compare a screw from each set to a screw from each other set to determine its relative length (either longer or shorter). Finally, you look through the instructions to find all of the possible screw lengths. Given your comparisons, you can establish that the shortest screws must correspond to the shortest screw length, the second shortest screws must correspond to the second shortest length, and so on.<br\/><br\/>\r\nNow, whenever the instructions call for a particular screw length, you can determine from which of your sets you must take a screw, assuming all screw lengths are distinct. ",
        "inputForm": "Each input will consist of 4 components: <br\/>\u25cf The first line contains the number of different screw sizes, n. <br\/>\u25cf Each of the next n lines will contain n elements, separated by spaces. In the ith line, the jth element in the line will be either a \u2018<\u2019, \u2018>\u2019, or an \u2018=\u2019, corresponding to the comparison between set i and set j (with set i listed first). <br\/>\u25cf The next line will contain n numbers, representing the n different screw lengths in descending order. <br\/>\u25cf The last line will contain a single integer representing the length of the screw you need to find. ",
        "sampleInput": "3<br\/>= > <<br\/>< = <<br\/>> > =<br\/>15 5 1<br\/>5",
        "outputForm": "The output should contain a single line, of the following format:<br\/><br\/>  SET X  <br\/><br\/>where X is the number corresponding to the screw group that matches the input length. ",
        "sampleOutput": "SET 1<br\/>"
    },
    "PRA13": {
        "title": "Food Poisoning",
        "type": "Advanced",
        "state": "up",
        "blurb": "Figure out who's infected with chicken pox based on a set of transmission rules.",
        "description": "You own a cafeteria, and you just found out that one of your customers had chicken pox, which is extremely contagious. In your cafeteria, trays are not washed, and you want to warn any people who may have been affected by his contaminated tray.  The infected customer was the very first customer of the day. \r\nThe cafeteria has one infinite tray stack, and customers get trays from and return trays to the top of the stack without any cleaning. Each tray has two sides, each of which can be infected or not infected. People can infect trays, trays can infect people, and trays can infect each other. Here is a list of exactly what actions can transmit the virus: <br\/><br\/>\r\n\u25cf If an infected person takes a tray, that tray becomes infected on both sides. <br\/>\u25cf If any person takes a tray that is infected on either side, that person becomes infected and spreads the infection to both sides of the tray. <br\/>\u25cf When a tray infected on the bottom is returned to the tray stack, it is placed on top of another tray, whose top side then becomes infected. <br\/>\u25cf If any tray is returned to the stack and placed on top of another tray whose top side is infected, the bottom of the new tray is infected.<br\/><br\/> \r\nYou know the order in which all the customers took and returned trays that day. Warn the infected customers by printing out the names of the infected customers. ",
        "inputForm": "Line 1:  a single integer n indicating the number of tray actions taken by customers. <br\/> Lines 2 \u2264 i \u2264 n + 1:  consist of the tray action and the person\u2019s name, in the form \u201cx y\u201d where x is a \u2018t\u2019 if the customer takes a tray and \u2018r\u2019 if the customer returns a tray, and y is the name of the customer.",
        "sampleInput": "3<br\/>t Bob<br\/>r Bob<br\/>t Jack<br\/>",
        "outputForm": "Output the names of each customer infected, with each customer\u2019s name on a new line.  The customers should be ordered by when they took their tray, with names of customers who took trays earlier printed before names of customers who took trays later. <br\/><br\/> The output is to be formatted exactly like the sample output given below. ",
        "sampleOutput": "Bob<br\/>Jack<br\/>"
    },
    "PRB12": {
        "title": "Long Snapper",
        "type": "Beginner",
        "state": "up",
        "blurb": "Find the length of the longest run in a string.",
        "description": "A group of Gryffindors are playing a variant of Exploding Snap. Each player gets to play a sequence of cards. They can continue playing until one of their cards explodes, at which point the next person gets a turn. The winner is the person who plays the most cards in a row. <br\/><br\/> \r\nA single string can be used to represent this game: each player is represented by a distinct letter or digit, and the string represents the sequence in which players played their cards. For example, \u201caaabba\u201d means that player \u201ca\u201d played three cards in a row, and then player \u201cb\u201d played two cards and then \u201ca\u201d played one card.   <br\/><br\/> \r\nHermione is looking for a strategy in this game. In particular, she\u2019s interested in how many cards in a row it takes to win. Write a program that takes in a game string and outputs the number of cards that it took to win in that game. In the above example, the number of cards to win is three",
        "inputForm": "The first line contains an integer n representing the length of the string s. The second line contains s.",
        "sampleInput": "3 <br\/>aab <br\/>",
        "outputForm": "Print a single integer representing the highest number of cards in a row played by any player.",
        "sampleOutput": "2"
    },
    "PRA12": {
        "title": "A King's Match",
        "type": "Advanced",
        "state": "up",
        "blurb": "Find the minimal total King distance from a point to all of the other points",
        "description": "Hermione has finally convinced Harry to hold meetings for Dumbledore\u2019s Army again, yay! Sadly, the Room of Requirement is not an option, as it has been compromised. Instead, Harry must determine where the best new meeting place is, considering all n members of the D.A. are at different locations on a grid. Out of sheer laziness, Harry plans to have the D.A. meet at one of these n locations.  <br\/><br\/>\r\nThe best meeting point is defined as the one that minimizes the sum of King distances between the chosen location and the other n-1 points. The King distance between two points is defined as the number of steps it takes to go from one point to the other, at each step travelling to one of the 8 surrounding lattice points (much like a King on a chessboard). For example, it takes one step to go from (0, 0) to the points (0,1), (1,1), (1,0), (1,-1), (0,-1), (-1,-1), (-1,0), and (-1,1).<br\/><br\/> Math was never Harry\u2019s strong point, so he\u2019s having trouble figuring out where to meet. Can you help him? ",
        "inputForm": "The first line contains an integer n representing the number of meeting points. The next n lines each contains two integers x y representing the coordinates of the possible meeting points. ",
        "sampleInput": "2 <br\/>1 1 <br\/>1 2 <br\/>",
        "outputForm": "Print the minimum total King distance of the best meeting point",
        "sampleOutput": "1"
    },
    "PRB11": {
        "title": "Scantron Score",
        "type": "Beginner",
        "state": "up",
        "blurb": "Oh no! Your school's scantron machine seems to be broken and the repair man can't fix it in time! Can you use your super-human programming skills to save the day?",
        "description": "Oh no! Your school's scantron machine seems to be broken and the repair man can't fix it in time! Use your programming skills to save the day. <br\/><br\/> In this challenge, you will be given an integer <i>N<\/i> representing the number of questions in a test. Following, there will be a space-separated line of <i>N<\/i> numbers representing the answer key, and a space-separated line of <i>N<\/i> numbers representing a student's answer sheet. <br\/><br\/> For each correct answer that a student gets, you must add 4 points to their total, and for each incorrect answer you must deduct 1 point.",
        "inputForm": "An integer <i>N<\/i> representing the number of characters in the following two lines. Two lines consisting of lowercase characters, the first containing an answer key (the correct answers), and the second containing an answer sheet.",
        "sampleInput": "3<br\/>a b c<br\/>c b a",
        "outputForm": "An integer representing a student's score.",
        "sampleOutput": "2"
    },
    "PRA11": {
        "title": "Radar Crabs",
        "type": "Advanced",
        "state": "up",
        "blurb": "Poseidon, the king of the Sea, needs your help to count the number of crabs in his army.",
        "description": "Poseidon, the king of the Sea, needs your help to count the number of crabs in his army. Recently, he's taken several radar images of his troops in an enclosed room, but there are too many for him to manually count! He wants you to write a program to find the number of crabs (represented by enclosed rectangles) in the grid. <br\/><br\/> Given a grid from the radar images of Poseidon's crab army, return the number of crabs found. An enclosed rectangle may use the outer bounds of the grid as a side.",
        "inputForm": "The first line contains two integers, m and n, representing the size of the array. Following are n lines with m characters, either a \".\" or a \"#\" ",
        "sampleInput": "30 15<br\/>........................#.....<br\/>........................#.....<br\/>........................#.....<br\/>.....######.............######<br\/>.....#....#....######.........<br\/>.....#....#....#....#.....#...<br\/>.....######....######.....#...<br\/>..........................####<br\/>..............................<br\/>######.....##############.....<br\/>#....#.....#............#.....<br\/>...........#............#.....<br\/>######.....##############.....<br\/>#....#....................####<br\/>######....................#...",
        "outputForm": "A single integer representing the count of enclosed rectangles.",
        "sampleOutput": "6"
    },
    "PRB10": {
        "title": "FizzBuzz",
        "type": "Beginner",
        "state": "up",
        "blurb": "Fizzzzzzz. Buzzzzzz. FizzzzBuzzzzz.",
        "description": "Rotato Farms has contracted you yet again! This time they need you to help them compete in a FizzBuzz competition. <br\/> Given a number, you must return 'buzz' if the number is divisible by 5, 'fizz' if the number is divisible by 3, or 'fizzbuzz' if the number is divisible by both 5 and 3. If no string is to be returned, then your program must return the same number.",
        "inputForm": "Given a integer n.",
        "sampleInput": "33",
        "outputForm": "Return a String representing the output of the FizzBuzz algorithm.",
        "sampleOutput": "fizz"
    },
    "PRA10": {
        "title": "String Modication",
        "type": "Advanced",
        "state": "up",
        "blurb": "Roy was given a string s containing only uppercase English letters that he has to process. Can you help him out?",
        "description": "Roy was given a string s containing only uppercase English letters. He can do any number of modifications on s. The allowed modifications are:<br\/><br\/>\r\n\r\n1)He can add underscore ('_') character in anywhere inside the string.<br\/>\r\n2)He can delete any existing character of the string.<br\/>\r\n3)He can swap any two characters of the string.\r\nEvery character in the resulting string has a value equal to its ASCII value.<br\/>\r\n<br\/>\r\nAfter doing the modifications the string needs to have the following properties:\r\n<br\/><br\/>\r\nThe length of the string should be equal to n.\r\nThere should be at least k characters of higher value between two equal letters (Note that, underscore is not a letter).\r\nCalculate how many different strings Roy can achieve modulo 1000003 (10^6+3).\r\n<br\/><br\/>\r\nNote: In the increasing order of ASCII value, we can arrange the alphabet in the following way: <br\/>\r\nA<B<C<D<\u22ef<X<Y<Z<_",
        "inputForm": "The first line contains two space separated integers n (1\u2264n\u2264109) and k (0\u2264k\u2264109). The second line contains string s containing only uppercase English letters (1\u2264|s|\u22642500).",
        "sampleInput": "3 1<br\/>LBB",
        "outputForm": "Print the number of different strings Roy can achieve modulo 1000003 (10^6+3).",
        "sampleOutput": "15"
    },
    "PRB9": {
        "title": "Palindromesemordnilap",
        "type": "Beginner",
        "state": "up",
        "blurb": "Output the length of the shortest palindrome containing the input as a contiguous substring.",
        "description": "Despite your recent success with geohashing, you\u2019ve decided that it\u2019s not quite enough. Rather than settle with taking the MD5 hashes straight from the Dow Jones opening, you want to find the shortest palindrome that contains\r\nthat MD5 hash and perform some more complicated\r\nmangling. That\u2019s a lot of tedious calculations, so you decide to write a program instead. <br\/><br\/>\r\n\r\nA string p is a palindrome if and only if, when the letters in p are reversed to form the string p\u2019, p = p\u2019. You want to output the length of the shortest palindromic string that has the input s as a contiguous substring.",
        "inputForm": "Line 1: a string s, consisting of n characters",
        "sampleInput": "ILOVECS",
        "outputForm": "Line 1: an integer m, indicating the number of characters in the shortest palindromic string p containing s",
        "sampleOutput": "13"
    },
    "PRA9": {
        "title": "Seat Selection",
        "type": "Advanced",
        "state": "up",
        "blurb": "Given the number of people and a skip count, determine where you should start to sit where you want.",
        "description": "Sometimes seat selection is not as easy. One night, you are first to arrive at your friend's dinner party. Your friend has not finished setting up the n dinner table placeholders that he has made for you and your\r\nfriends. He gives you the n placeholders to place around the round dinner table, and each seat at the table is already numbered 1 through n, increasing clockwise, in a circle. Because your friend likes to play\r\ngames, he instructs you to put a placeholder at every mth spot at the table moving clockwise, starting at whichever place you choose and ignoring any spot with a placeholder already. The last placeholder is\r\nyours, and you want to sit in the seat numbered n. At which spot should you start putting down placeholders? \r\n\r\n<br\/><br\/>\r\n\r\nFor example, given 10 sets and instructions to put a placeholder at every 3rd seat, you want to begin by putting a placeholder at seat 9. The placement order is as follows: 9, 2, 5, 8, 3, 7, 4, 1, 6, 10. (Note that you will place at 9 first, then skip 3.) The last seat, 10, is yours.",
        "inputForm": "Line 1: an integer n <br\/>Line 2: an integer m",
        "sampleInput": "10<br\/>3",
        "outputForm": "Line 1: an integer f, the prisoner to shoot first in order to spare the nth prisoner",
        "sampleOutput": "9"
    },
    "PRB8": {
        "title": "The Difference",
        "type": "Beginner",
        "state": "up",
        "blurb": "Inspired by this comic, you decided to do an experiment to see how people will react to pulling a lever that zaps them.",
        "description": "Inspired by this comic, you decided to do an experiment to see how people will react to pulling a lever that zaps them. In the study, if the participant decides not to pull the lever again, you put them in a set, and if they do it again, they don\u2019t go in that set. But then your arch-nemesis comes and messes with your data by removing and adding people from your carefully determined set! <br\/><br\/>\r\n\r\nIn order to save the study, we'll need your help: to purify the sets, write code to take in the mingled group of people and compute who will need to be added and removed to yield the original group. <br\/><br\/>\r\n\r\nEach person is represented as a single unique uppercase character A-Z, and a set of people is simply a string of uppercase characters in alphabetical order. The first set is the tarting set, and the second set is the ending set.",
        "inputForm": "Line 1: a string s representing the starting set Line 2: a string t representing the ending set Both strings will consist of unique uppercase characters in alphabetical order.",
        "sampleInput": "AEIOU<br\/>BCEISTU",
        "outputForm": "Line 1: a string a representing the elements to be added Line 2: a string r representing the elements to be removed Both strings should consist of unique uppercase characters in alphabetical order. Print \"NONE\" if either set is empty.",
        "sampleOutput": "BCST<br\/>AO"
    },
    "PRA8": {
        "title": "The Laziest of them All",
        "type": "Advanced",
        "state": "up",
        "blurb": "Simon is a very lazy boy, who always sleeps in his Math class. One day his teacher catches him sleeping and tells him that she will fail him unless he can prove himself to her by answering her question. If Simon can answer it correctly, she will forgive him. Can you help him find the answer to this problem? ",
        "description": "Simon is a very lazy boy, who always sleeps in his Math class. One day his teacher catches him sleeping and tells him that she will fail him unless he can prove himself to her by answering her question. If Simon can answer it correctly, she will forgive him.\r\n<br\/> <br\/> The problem: The teacher gives Simon a number N and asks him to find out the probability that any proper divisor of N would be an even perfect square. \r\n<br\/><br\/> <b> Note: Even perfect square means the number should be even and a perfect square. <\/b>",
        "inputForm": "The first line of input contains an integer T, the number of test cases. T lines follow, each line containing N, the number that the teacher provides.",
        "sampleInput": "2<br\/>2<br\/>8",
        "outputForm": "For each test case, print in a new line the output in p\/q format where p and q are positive coprime integers. If p is 0, you should simply output 0.",
        "sampleOutput": "0<br\/>1\/3"
    },
    "CS5": {
        "title": "The Difference",
        "type": "proco2012",
        "state": "proco2012",
        "blurb": "Find the elements that differ between two sets.",
        "description": "Inspired by this comic, you decided to do an\r\nexperiment to see how people will react to\r\npulling a lever that zaps them. In the study, if\r\nthe participant decides not to pull the lever\r\nagain, you put them in a set, and if they do it\r\nagain, they don\u2019t go in that set. But then your\r\narch-nemesis comes and messes with your\r\ndata by removing and adding people from your\r\ncarefully determined set!\r\n<br\/><br\/>\r\nIn order to save the study, we'll need your help:\r\nto purify the sets, write code to take in the\r\nmingled group of people and compute who will\r\nneed to be added and removed to yield the\r\noriginal group.\r\n<br\/><br\/>\r\nEach person is represented as a single unique\r\nuppercase character A-Z, and a set of people is\r\nsimply a string of uppercase characters in\r\nalphabetical order. The first set is the starting",
        "inputForm": "Line 1: a string s representing the starting set <br\/>Line 2: a string t representing the ending set <br\/>Both strings will consist of unique uppercase characters in alphabetical order.",
        "sampleInput": "AEIOU<br\/>BCEISTU",
        "outputForm": "Line 1: a string a representing the elements to be added <br\/>Line 2: a string r representing the elements to be removed <br\/>Both strings should consist of unique uppercase characters in alphabetical order. Print none (in lowercase) if either set is empty.",
        "sampleOutput": "BCST<br\/>AO"
    },
    "CS4": {
        "title": "Magical",
        "type": "proco2012",
        "state": "proco2012",
        "blurb": "Verify that a given grid is a normal magic square.",
        "description": "Richard Stallman did not appreciate your amateur ninja attack on his home!In revenge, he has locked you in an n x n cell. To alleviate your boredom you have begun hopping around the cell, but just as you enjoy walking on certain floor tile colors, you feel like you must hop around your cell such that the number of times you land on any tile in the cell leads to the formation of a magic square. A normal magic square is an n x n grid of unique integers 1 to n2 such that every row, every column, and both principal diagonals have the same sum. For example, <br\/>2 7 6<br\/>9 5 1<br\/>4 3 8<br\/>\r\nis a 3 x 3 normal magic square because the rows, columns and principal diagonals (2-5-8 and 6-5-4) all sum to 15.",
        "inputForm": "Line 1: an integer n, representing the width and height of the grid Lines 2 \u2264 i \u2264 n + 1: n space-separated integers that denote row i - 1",
        "sampleInput": "3<br\/>6 1 8<br\/>7 5 3<br\/>2 9 4",
        "outputForm": "Line 1: a string, either yes or no, denoting whether the given grid is a magic square",
        "sampleOutput": "yes"
    },
    "CS3": {
        "title": "Happier than Hailstone",
        "type": "proco2012",
        "state": "proco2012",
        "blurb": "Check whether a given positive integer is a happy number.",
        "description": "You\u2019ve just spent the last three days in your room tracing the Hailstone Sequence.Sadly for you, you\u2019ve made no progress in proving or disproving the Collatz Conjecture. To cheer yourself up, you decide to take on a different sequence of numbers, called happy\/sad numbers. As in the Hailstone Sequence, you start at a certain number and start applying a given rule for generating the next number. If after some intense tracing, you end up at 1, then you\u2019re happy, and the number you started with is called a happy number. If you don\u2019t, you\u2019ll end up in a cycle, and having to do an infinite trace makes you sad.<br\/><br\/> Formally, a positive integer n is a happy number if and only if f(\u2026f(f(n))) is eventually 1, where f(n) is defined to be the sum of the squares of the digits of n. Positive integers that are not happy numbers are called sad numbers.",
        "inputForm": "Line 1: an integer n",
        "sampleInput": "42",
        "outputForm": "Line 1: a string, either happy or sad, denoting whether n makes you happy or sad",
        "sampleOutput": "sad"
    },
    "CS2": {
        "title": "My Hobby: Sociology",
        "type": "proco2012",
        "state": "proco2012",
        "blurb": "Partition a list of numbers around a pivot",
        "description": "To further your research in Sociology, you decided to conduct a study ranking people from best to worst. Once you collected all your data, you decided that it would be simpler just to declare a threshold and rank people as either \u201cgood\u201d or \u201cbad.\u201d The rigorous scientist that you are, you choose the \u201cgoodness\u201d of the first person you interviewed to be the dividing line. Now all that remains is to rearrange the rest of your data.<br\/><br\/> Call the first element of a given list of n integers the pivot, with value p. Rearrange the list so that all numbers less than or equal to p are before it and all numbers greater than p are after it. The relative order of the numbers in each half of the new list must be retained; that is, for any b and c both before or both after the pivot in the result, if b was before c in the original list b should also be before c in the result.",
        "inputForm": "Line 1: an integer n Line 2: n space-separated integers, with the first integer as the pivot p",
        "sampleInput": "10<br\/>4 9 0 3 6 1 2 8 6 4",
        "outputForm": "Line 1: n space-separated integers representing the rearranged list",
        "sampleOutput": "0 3 1 2 4 4 9 6 8 6"
    },
    "CS1": {
        "title": "Abnormal Approach",
        "type": "proco2012",
        "state": "proco2012",
        "blurb": "Add two base-10 numbers without carrying.",
        "description": "Having fallen madly in love, you\u2019ve lost all ability to do normal math. You find yourself unable to do even simple addition, as you always forget to carry. Fortunately, your programming skills are unimpaired, and you decide to make the most of this new style of false addition by writing a program to do it for you. Your normal approach is useless here. <br\/><br\/> Normal base-10 addition involves a carrying step whenever two digits sum to 10 or greater. For example, in 23 + 49 = 72, the 3 + 9 involves carrying a 1 to the tens unit. In false addition, any numbers that would be carried are simply dropped. So 23 + 49 = 62, since 3 + 9 = 12",
        "inputForm": "Line 1: an integer a <br\/> Line 2: an integer b",
        "sampleInput": "499<br\/>861",
        "outputForm": "Line 1: an integer c, the result of false addition performed on a and b.",
        "sampleOutput": "250"
    },
    "PRB7": {
        "title": "What's Next? ",
        "type": "Beginner",
        "state": "up",
        "blurb": "Currently, Steve is learning about sequences and series in his math class, but he's having trouble identifying the next term in a sequence. Can you write a program to help out your friend?",
        "description": "A relatively simple task for humans to do is to identify the next number in an arithmetic or geometric sequence of numbers. For example, given the sequence of numbers 4, 8, and 12, we know that the next number in the sequence is 16 since each number is followed by a number increasing it by 4. <br\/><br\/>Alternatively, given the sequence of numbers 2, 4, and 8, we know that the next number in the sequence is 16 since each number twice its predecessor. <br\/> <br\/>Your task is to write a program that will deduce the next integer in a given sequence of three integers where the same arithmetic or geometric operation is applied to each integer to produce the next. The only operations that will be used are addition, subtraction, multiplication, or division.",
        "inputForm": "An integer N representing the number of following lines containing data. Each input line contains three space-seperated integers. The integers represent an arithmetic or geometric sequence as described above.",
        "sampleInput": "3<br\/>7 21 35<br\/>-10 20 -40<br\/>64 16 4\n",
        "outputForm": "Your program should print out N lines. Each line contain the next integer in the matching input line given.",
        "sampleOutput": "49<br\/>80<br\/>1"
    },
    "PRA7": {
        "title": "Save the Green. Make Less Cuts.",
        "type": "Advanced",
        "state": "up",
        "blurb": "Barbara has decided to become a lumberjack! She's having some trouble on her first job at the company, so she needs your help to solve her problems...",
        "description": "The lumberjack company gives a wooden board composed of M X N wooden square pieces to Barbara and asks her to find the minimal cost of cutting the board into square wooden pieces. Barbara can cut the board along horizontal and vertical lines, and each cut divides the board in smaller parts. Each cut has a cost depending on whether the cut is made along a horizontal or a vertical line.<br\/><br\/>Let us denote the costs of cutting it along consecutive vertical lines with x1, x2, ..., xn-1, and the cost of cutting it along horizontal lines with y1, y2, ..., ym-1. If a cut (of cost c) is made and it passes through n segments, then total cost of this cut will be n*c.<br\/><br\/>The cost of cutting the whole board into single squares is the sum of the cost of each cut made to turn the whole board into square wooden pieces of size 1x1. Barbara should compute this minimal cost of breaking the whole wooden board into these 1x1 squares.\r\n\r\nBarbara needs your help to find the minimal cost. Can you help her with this challenge?",
        "inputForm": "The first line contains two positive integers M and N, such that 2 <= M,N <= 100,  separated by a single space. In the next line, there are integers y1, y2, ..., ym-1, separated by spaces. Following them are integers x1, x2, ..., xn-1, separated by spaces.",
        "sampleInput": "2 2<br\/>2<br\/>1<br\/>",
        "outputForm": "Write an integer in separate line which denotes the minimal cost of cutting the whole wooden board into single wooden squares. Since the answer can be very large, output the answer modulo 10^9+7.",
        "sampleOutput": "4"
    },
    "PRB6": {
        "title": "Turning the Tables",
        "type": "Beginner",
        "state": "up",
        "blurb": "Rotato Farms needs your help again! They wanna hire you to fix their new issues...",
        "description": "Rotato Farms needs you're help again! They want to hire you to fix the issues caused by a recent earthquake. The monitor of their brand new computer has fallen sideways, and their methods to print out two-dimensional arrays aren't correct, but are rotated once counter-clockwise. It's your job to rotate these incorrect arrays once clockwise to fix the issue.",
        "inputForm": "An integer n, such that 0 < n < 15, followed by and n by n matrix separated by spaces and new lines",
        "sampleInput": "2 <br\/>1 2 <br\/>3 4",
        "outputForm": "An n by n matrix representing the the clockwise rotation of the input.",
        "sampleOutput": "3 1<br\/>4 2"
    },
    "PRA6": {
        "title": "See No Evil, Speak No Evil",
        "type": "Advanced",
        "state": "up",
        "blurb": "Great news! The jRobot Corporation, widely celebrated for its self-vacuuming Zoomba robot, is on the verge of completing its prototype ... ",
        "description": "Great news! The jRobot Corporation, widely celebrated for its self-vacuuming Zoomba robot, is on the verge of completing its prototype LISA (Lactose Intolerant Super Automaton) robot, a friendly, selflearning machine that is sure to win even the most skeptical of technophobes over with its human-like charms .But the research team seems to have run into a slight snag: while the rate of LISA\u2019s emotional development is off the charts, she has formed an odd affinity for look-say numbers, and the rest of her mathematical processes have shut down. <br\/><br\/> LISA is well aware of this problem and is dangerously close to self-destructing in desperation. To  prevent this catastrophe from occurring, you have been hired to repair LISA\u2019s glitch.Clearly, the best course of action is to reverse LISA\u2019s fondness for looksay numbers by having her develop an attachment for \u201clook-sayreverse\u201d numbers as well and having the attachments cancel each other out. To introduce these numbers to her, you have been asked to generate the n-th look-say-reverse number. Are you up to the task? <br\/><br\/> The first look-say-reverse numbers are 1, 11, 12, 2111, 1321, and 11213111, . If we know a look-say-reverse number, we can get the next one by splitting the number into consecutive runs of identical digits (so 11213111 becomes \u201c11 2 1 3 111\u201d), saying how many of each digit there are (e.g., \"two 1, one 2, one 1, one 3, three 1\"), writing this down as a new number (\"2112111331\"), and reversing it (to get 1331112112).",
        "inputForm": "The input consists of a single integer n.",
        "sampleInput": "4",
        "outputForm": "The output should consists of a string s on one line, representing the n-th look-say-reverse number.",
        "sampleOutput": "2111"
    },
    "PRB5": {
        "title": "Taking the (K)nots out of a String?",
        "type": "Beginner",
        "state": "up",
        "blurb": "Your friend, Steve, has recently started a babysitting service, however some of the children have begun to be more troublesome...",
        "description": "Your friend, Steve, has recently started a babysitting service, however some of the children have begun to be more troublesome! Whenever answering a question they add several \"not\"s to their answers. Steve is easily confused, and usually loses track of the amount of \"not\"s in a statement. Can you write a program to help Steve simplify a statement?",
        "inputForm": "Given a String with one set of consecutive \"not\"s, such that there are less than 15 \"not\"s",
        "sampleInput": "Is there not not a movie on?",
        "outputForm": "A single String omitting the unnecessary \"not\"s from the given input String",
        "sampleOutput": "Is there a movie on?"
    },
    "PRA5": {
        "title": "Tower of Hanoi",
        "type": "Advanced",
        "state": "up",
        "blurb": "Since ancient times, the monks of Lucas' Tower have honored their most cryptic tradition.",
        "description": "Since ancient times, the monks of Lucas' Tower have honored their most cryptic tradition, solving the following mathematical puzzle : Given a stack of n disks arranged from largest on the bottom to smallest on top placed on a rod, together with two empty rods, the towers of Hanoi puzzle asks for the minimum number of moves required to move the stack from one rod to another, where moves are allowed only if they place smaller disks on top of larger disks.",
        "inputForm": "An integer x representing the number of disks on the first rod, such that 0 < x < 30",
        "sampleInput": "3",
        "outputForm": "A single integer representing the minimum number of moves required to move the entire set of disks on to a new rod.",
        "sampleOutput": "7"
    },
    "PRB4": {
        "title": "The Not-So-Secret Language",
        "type": "Beginner",
        "state": "up",
        "blurb": "You've been brushing up on some history and discovered that Thomas Jefferson wrote using a special code with his friends!",
        "description": "You've been brushing up on some history and discovered that Thomas Jefferson wrote using a form of Pig Latin in letters to some of his close friends! A fellow student, who was also interested by this fact, asked for you to make a program that takes words in English and translates them into Pig Latin. The rules for Pig Latin are as follows: <br\/><br\/> 1) For words that begin with consonants, take the first letter, move it to the end of the word and add \"ay\"<br\/>2) For words that begin with a vowel, simply add a \"way\" to the end of the word",
        "inputForm": "Given that the first line contains an integer <i>n<\/i> representing the number of following words, followed by <i>n<\/i> more lines each with a single, lowercase word to be translated",
        "sampleInput": "3<br\/>lorem<br\/>ipsum<br\/>dolor",
        "outputForm": "Print <i>n<\/i> lines, each containing the given words translated into Pig Latin.",
        "sampleOutput": "oremlay<br\/>ipsumway<br\/>olorday<br\/>"
    },
    "PRA4": {
        "title": "Equation Solver",
        "type": "Advanced",
        "state": "up",
        "blurb": "After tutoring younger students for a while, you've come up with a brilliant solution to ease your workload...",
        "description": "After tutoring younger students for a while, you've come up with a brilliant solution to ease your workload: create a simple equation solver that solves one variable, linear equations. These equations can contain any single, lowercase letter as a variable name.",
        "inputForm": "A String containing a linear equation containing one variable represented by an unknown lowercase letter.",
        "sampleInput": "4*j+7=3*j-4",
        "outputForm": "A single line containing the value of the variable",
        "sampleOutput": "-11"
    },
    "PRB3": {
        "title": "Intro to Statistics",
        "type": "Beginner",
        "state": "up",
        "blurb": "You have recently been hired by a senior in high school taking AP Statistics to help him on his homework. Your mission, should you choose to accept it, is to ...",
        "description": "You have recently been hired by some students taking a Statistics class to help them on the homework. One of the problems in the textbook requires them to make a program that takes in a set of n numbers and return some statistical analyses about the set, specifically the mean of the numbers. Unfortunately, they do not know how to program and require your expertise in the matter!",
        "inputForm": "First line contains n, a non-zero integer, representing the total number of following lines. Each other line represents an element in the set.",
        "sampleInput": " 3 <br\/> 3 <br\/> 4 <br\/> 5",
        "outputForm": "Assuming that all ouputs are integers, print out the mean",
        "sampleOutput": " 4"
    },
    "PRA3": {
        "title": "A Classic - Knight's Tour",
        "type": "Advanced",
        "state": "up",
        "blurb": "It is your turn to solve one of the most classic mathematical-based problems (dating all the way back to 9th century A.D.) using your advanced programming skills!",
        "description": "A knight's tour is the sequence of moves of a knight on a chessboard such that the knight visits every square exactly one time. Your task, quite simply, is to determine whether a knight's tour can be made given an m * n chessboard and a x, y start position on said m * n board. ",
        "inputForm": "Two lines, each containing two numbers. The first represents m and n (respectively) and the second represents the x and y position (respectively)",
        "sampleInput": " 7 7 <br\/>3 4",
        "outputForm": "A single line stating either \"true\" or \"false\"",
        "sampleOutput": "true"
    },
    "PRB2": {
        "title": "Today's the Date",
        "type": "Beginner",
        "state": "up",
        "blurb": "Your new client, Carlos, has been having some problems with his memory recently. He's wants you to write a program for him that... ",
        "description": "You're new client, Carlos, has been having some problems with his memory recently. He can remember the date (e.g. August 30, 2014), but never the day of the week! Because of this, Carlos has missed many of his appointments and needs your help to fix his problem. He wants you to write a program that given a date in an abbreviated notation, will output the day.",
        "inputFormat": "One line either containing an abbreviated format (08\/30\/2012) date. The month and day will contain exactly 2 digits, while the year contains exactly 4 digits. Each part of the abbreviated format is separated by forward slashes.",
        "sampleInput": "11\/24\/1999",
        "outputForm": "One line containing a day of the week (eg Monday, Tuesday, etc...) ",
        "sampleOutput": "Wednesday"
    },
    "PRA2": {
        "title": "Step In, Don't Tire",
        "type": "Advanced",
        "state": "up",
        "blurb": "The local police department has carefully selected you to help them with their new physical training program. I hope they know that you're a different type of programmer!",
        "description": "The local police department has carefully selected you to help them with their new physical training program, specifically the tire run, an event where trainees are required to run through a straigt line of tires. The captain informs you that each trainee stands in front of the first tire and can either step in the next tire (directly in front of him\/her) or the next-to-next tire (two in front of him\/her). Unfortunately the police department doesn't know how many tires they expect to collect over the next month, but they have already collected around 20. <br\/><br\/>Given an integer n, find the number of possible ways a trainee can run across the line of n tires, keeping in mind they can only step in the next, or next-to-next, tire.",
        "inputForm": "One line containing an integer n, such that 20 < n < 100 ",
        "sampleInput": "75",
        "outputForm": "One line containing a large integer representing the number of possible ways to run across the tire line",
        "sampleOutput": "2111485077978050 "
    },
    "PRB1": {
        "title": "First Submission",
        "type": "Beginner",
        "state": "up",
        "blurb": "This is a special challenge to make you familiar with IO.",
        "description": "This is a special challenge to make you familiar with IO. <br \/> To solve future problems, your program will need to be able to take in values, perform actions on these values based on the problem, and finally output your calculations. Practice this by solving the following problem: Given an integer return the square root multiplied by two.",
        "inputForm": "A single line containing an integer. We recommend you use a java.util.Scanner to receive the input",
        "sampleInput": "4489",
        "outputForm": "A single line containing an integer. We recommend you use the System.out.println(\"\") command for your output",
        "sampleOutput": "134"
    },
    "PRA1": {
        "title": "Hired!",
        "type": "Advanced",
        "state": "up",
        "blurb": "You've been hired by Rotato Farms Inc. to write a program that calculates the GCD between two given numbers. Only one problem...",
        "description": "You've been hired by Rotato Farms Inc. to write a program that calculates the GCD between two given numbers. Easy, right? Well, apparently the last consultant the company hired had a bit of a temper, so when he was laid off and replaced by you, he smashed the computer with his baseball bat causing it to output hexadecimal numbers! Your mission, should you choose to accept it, is to take in two hexadecimal integers and return one decimal number (so the company can read it) and one hexadecimal number (so the broken computer can read it), each representing the Greatest Common Denominator of the two inputs.",
        "inputForm": "Two lines each containing a four digit hexadecimal number x, such that 0000 <= x <= ffff. Each letter in the hexadecimal number will be capital",
        "sampleInput": "047B<br\/>0965",
        "outputForm": "Two lines. The first containing a decimal number (any length) and the second number containing a four digit hexadecimal number. Any letters in the hexadecimal number must be capital. ",
        "sampleOutput": "37<br\/>0025"
    },
    "Division": {
        "title": "Divided We Fall",
        "type": "Beginner",
        "state": "debug",
        "blurb": "Divide the two numbers.",
        "description": "The program is not printing the output correctly. Change one line of code to correctly display the quotient.",
        "inputForm": "Two space separated integers, n1 and n2.",
        "sampleInput": "3 5",
        "outputForm": "The result of the division: n1\/n2, as a decimal.",
        "sampleOutput": "0.6"
    },
    "OoO": {
        "title": "OoOps I Messed Up!",
        "type": "Beginner",
        "state": "debug",
        "blurb": "Order of Operations",
        "description": "Use parentheses to correct one line in the order of operation statements. Logically you're program should follow these rules : <br\/><br\/> The numerator is p1 and the denominator is p2 modulus p3 + p1.",
        "inputForm": "No inputs",
        "sampleInput": "<br\/>",
        "outputForm": "A single number containing the answer to the statements in the fixed code",
        "sampleOutput": "0"
    },
    "DeMorgan": {
        "title": "De Morgan's Laws",
        "type": "Advanced",
        "state": "debug",
        "blurb": "De Morgan's Laws",
        "description": "Use De Morgan's Law to change the commented line to its correct form",
        "inputForm": "No inputs",
        "sampleInput": "",
        "outputForm": "",
        "sampleOutput": "Success"
    },
    "Strings": {
        "title": "String Equality",
        "type": "Beginner",
        "state": "debug",
        "blurb": "String Equality",
        "description": "Check if two strings are equal",
        "inputForm": "Two strings on two seperate lines",
        "sampleInput": "Abc<br>Abc",
        "outputForm": "Either output \"Equal\" or \"Not\"",
        "sampleOutput": "Equal"
    },
    "NestedIf": {
        "title": "Nested Ifs",
        "type": "Beginner",
        "state": "debug",
        "blurb": "Nested If Statement",
        "description": "Use curly braces to correct one line in the nested if statements. Logically, your program should follow these rules : <br\/>If a number is greater than 20 and it is even, multiply the number by two. Otherwise, you should multiply it by 3",
        "inputForm": "No inputs",
        "sampleInput": "",
        "outputForm": "",
        "sampleOutput": "70"
    },
    "Fibonacci": {
        "title": "Fibonacci",
        "type": "Beginner",
        "state": "debug",
        "blurb": "Fibonacci",
        "description": "Given n, output f(n) if f(n)=f(n-1)+f(n-2) for n>2",
        "inputForm": "One line, n",
        "sampleInput": "5",
        "outputForm": "the number",
        "sampleOutput": "5"
    },
    "NumberSuffixes": {
        "title": "Number Suffixes",
        "type": "Advanced",
        "state": "debug",
        "blurb": "Number Suffixes",
        "description": "Given a list of strings whose suffixes are integers, your task is to sort the strings in ascending order based on the integers at the end of the strings. For example, 'cloud9' would be placed after 'you4', since 4 < 9. If the numbers at the end of two strings are equal, output them in the same order as they are given.",
        "inputForm": "The input will contain exactly n+1 lines.<br>The first line contains n, the number of strings.<br>Lines 2 to n+1 contain the strings to be sorted.",
        "sampleInput": "4<br>bug3<br>bug1<br>bug5<br>bug2",
        "outputForm": "strings in order",
        "sampleOutput": "bug1<br>bug2<br>bug3<br>bug5"
    },
    "ArraySum": {
        "title": "Array Sums",
        "type": "Beginner",
        "state": "debug",
        "blurb": "Array Sums",
        "description": "Sum up the first 5 elements of an array",
        "inputForm": "1 line with a comma separated list of integers",
        "sampleInput": "1,2,3,4,5,6,7,8,9",
        "outputForm": "The sum of the first 5 elements",
        "sampleOutput": "15"
    },
    "BubbleSort": {
        "title": "Bubble Sort",
        "type": "Advanced",
        "state": "debug",
        "blurb": "Sort integers in order!",
        "description": "Sort the numbers from greatest to least",
        "inputForm": "First line is n, the amount of integers that will follow<br>Lines 2 to n+1 will each contain an integer",
        "sampleInput": "4<br>1<br>10<br>2<br>7",
        "outputForm": "Integers sorted from greatest to least, one number per line",
        "sampleOutput": "10<br>7<br>2<br>1"
    },
    "CoveringIntervals": {
        "title": "Covering Intervals",
        "type": "Advanced",
        "state": "debug",
        "blurb": "",
        "description": "Given a set of n intervals [a, b], a set of points S covers the set of intervals if every interval contains at least one of the points  in S. An interval [a,b] contains the point p if a \u2264 p \u2264 b. You must find the smallest possible size of S.",
        "inputForm": "The first line of the input will contain a single integer n: the number of intervals<br>The following n lines will each specify an interval. They will contain two space separated integers a b: the endpoints of the interval.",
        "sampleInput": "1<br>1 10",
        "outputForm": "Output a single integer: the minimum number of points needed to cover all the intervals.",
        "sampleOutput": "1"
    },
    "ArrayLookup": {
        "title": "Array Lookup",
        "type": "Advanced",
        "state": "debug",
        "blurb": "Array Lookup",
        "description": "You are given a query integer q and a sorted array of n distinct integers, a[0], a[1], \u2026 a[n-1]. The elements in the array will be strictly increasing order. Find the index at which the query appears in the array.",
        "inputForm": "The first line has two integers, n and q<br>The next line will consist of n integers: a[0], a[1], ... a[n-1]",
        "sampleInput": "3 2<br>2 4 6",
        "outputForm": "A single integer. If the query is not present in the array, output -1",
        "sampleOutput": "0"
    },
    "Spiral": {
        "title": "Spiral",
        "type": "Advanced",
        "state": "debug",
        "blurb": "Draw a spiral",
        "description": "Print a spiral of numbers in a nxn square starting from the top left.",
        "inputForm": "The first line contains an integer, n, the width and height of the spiral",
        "sampleInput": "2",
        "outputForm": "a spiral",
        "sampleOutput": "1 2<br>4 3"
    }
}